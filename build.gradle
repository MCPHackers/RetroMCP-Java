plugins {
    id "java"
}

allprojects {
	apply plugin: "java"

	repositories {
		mavenCentral()
		maven { url "https://jitpack.io/" }
		maven { url "https://maven.fabricmc.net/" }
		maven { url "https://mcphackers.org/libraries/" }
		maven { url "https://maven.glass-launcher.net/releases" }
	}

	dependencies {
		runtimeOnly sourceSets.test.output

		// Required libraries
		implementation "org.ow2.asm:asm:${project.asm_version}"
		implementation "org.ow2.asm:asm-analysis:${project.asm_version}"
		implementation "org.ow2.asm:asm-commons:${project.asm_version}"
		implementation "org.ow2.asm:asm-tree:${project.asm_version}"
		implementation "org.ow2.asm:asm-util:${project.asm_version}"

		implementation "com.github.MCPHackers.RetroDebugInjector:rdi-nio:${project.rdi_version}"
		implementation "com.github.MCPHackers.RetroDebugInjector:rdi:${project.rdi_version}"

		implementation "io.github.lassebq:fernflower:${project.fernflower_version}"

		implementation "org.json:json:${project.json_version}"
		implementation "com.github.MCPHackers:DiffPatch:${project.diffpatch_version}"
		implementation "org.apache.commons:commons-lang3:${project.apache_version}"
		implementation "net.fabricmc:mapping-io:${project.mapping_io_version}"
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"

		// Use release flag on Java 9+ instead of source & target flags
		// This makes the JDK read the boot classpath and use the proper
		// libraries to be compliant with Java 8 without issues
		if (JavaVersion.current().isJava9Compatible()) {
			it.options.release.set(8)
		}
	}

	java {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}
}

subprojects {
	apply plugin: "application"
}
